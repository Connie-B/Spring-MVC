<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.1.5</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.example</groupId>
	<artifactId>accessing-data-mysql</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>accessing-data-mysql</name>
	<description>Demo project for Spring Boot</description>
	<properties>
		<java.version>17</java.version>
		<webjars-bootstrap.version>5.3.2</webjars-bootstrap.version>
	    <webjars-font-awesome.version>4.7.0</webjars-font-awesome.version>
		<jakarta.validation.version>2.0.2</jakarta.validation.version>

		<!-- <app.profiles>local,release</app.profiles> -->

	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>

	    <dependency>
			<groupId>org.webjars.npm</groupId>
			<artifactId>bootstrap</artifactId>
			<version>${webjars-bootstrap.version}</version>
	    </dependency>
	    <dependency>
	      	<groupId>org.webjars.npm</groupId>
      		<artifactId>font-awesome</artifactId>
	      	<version>${webjars-font-awesome.version}</version>
	    </dependency>

		<dependency>
		    <groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
		</dependency>
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- Developer tools are automatically disabled when running a fully packaged application -->
		<!-- Flagging the dependency as optional is a best practice that prevents devtools from being transitively applied to other modules using your project. -->
	    <dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-devtools</artifactId>
		    <optional>true</optional>
	    </dependency>

		<!-- <dependency>
			<groupId>jakarta.validation</groupId>
			<artifactId>jakarta.validation-api</artifactId>
			<version>${jakarta.validation.version}</version>
		</dependency> -->

	</dependencies>

	<build>
		<plugins>
			<!-- The maven-war-plugin is responsible for collecting all artifact dependencies, 
			     classes and resources of the web application and packaging them into a web application archive 
				 (it makes a regular, old-style, deployable war file)
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <archive>
						<! - - exclude the META-INF/maven directory - - >
                        <addMavenDescriptor>false</addMavenDescriptor>
                    </archive>
                </configuration>
            </plugin> -->



			<!-- The Maven plugin for GraalVM Native Image building adds support for building and testing native images using Apache Maven -->
			<plugin>
				<groupId>org.graalvm.buildtools</groupId>
				<artifactId>native-maven-plugin</artifactId>
			</plugin>
			<!-- The Spring Boot Maven Plugin allows to package executable jar or war archives, 
			     run Spring Boot applications, generate build information and start Spring Boot application prior to running integration tests -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					
				    <addResources>true</addResources>
					<profiles>
						<profile>
							<id>local</id>
							<properties>
								<spring.profiles.active>local</spring.profiles.active>
							</properties>
						</profile>
						<profile>
							<id>release</id>
							<properties>
								<spring.profiles.active>release</spring.profiles.active>
							</properties>
							<activation>
								<activeByDefault>true</activeByDefault>
							</activation>
						</profile>
					</profiles>
				</configuration>
			</plugin>
			
		</plugins>
	</build>

</project>
